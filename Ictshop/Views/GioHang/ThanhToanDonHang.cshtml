@model Ictshop.Models.Donhang
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@{
    ViewBag.Title = "ThanhToanDonHang";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center font-weight-bold" style="font-weight:bold">Trang thanh toán</h2>

@using (Html.BeginForm("DatHang", "GioHang", new { @class = "payment-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Madon)

        <!-- Tên người đặt hàng -->
        <div class="form-group row">
            <label class="col-md-3 font-weight-bold">Tên người đặt hàng</label>
            <div class="col-md-9">
                @{
                    var nguoidung = Session["use"] as Ictshop.Models.Nguoidung;
                    if (nguoidung != null)
                    {
                        <p class="h5">@nguoidung.Hoten</p>
                    }
                    else
                    {
                        <p class="text-danger">Thông tin người dùng không hợp lệ!</p>
                    }
                }
            </div>
        </div>

        <!-- Ngày đặt -->
        <div class="form-group row">
            <label class="col-md-3 font-weight-bold">Ngày đặt</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Ngaydat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Ngaydat, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Tổng tiền -->
        <div class="form-group row">
            <label class="col-md-3 font-weight-bold">Tổng tiền thanh toán</label>
            <div class="col-md-9">
                <h4 class="text-danger">@String.Format("{0:0,0}", @ViewBag.tongtien) VNĐ</h4>
            </div>
        </div>

        <!-- Địa chỉ nhận hàng -->
        <div class="form-group row">
            <label class="col-md-3 font-weight-bold">Địa chỉ nhận hàng</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Diachinhanhang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Diachinhanhang, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Phương thức thanh toán (Radio buttons) -->
        <div class="form-group row">
            <label class="col-md-3 font-weight-bold">Phương thức thanh toán</label>
            <div class="col-md-9 payment-methods">
                <label class="payment-option">
                    @Html.RadioButton("MaTT", "1", new { id = "cash", @class = "form-check-input" })
                    Tiền mặt
                </label>
                <label class="payment-option">
                    @Html.RadioButton("MaTT", "2", new { id = "transfer", @class = "form-check-input" })
                    Chuyển khoản
                </label>
            </div>
        </div>

        <!-- Ghi chú -->
        <div class="form-group row">
            <label class="col-md-3 font-weight-bold">Ghi chú</label>
            <div class="col-md-9">
                <ul class="text-danger list-unstyled">
                    <li>• Đối với thanh toán bằng tiền mặt, quý khách kiểm tra sản phẩm trước khi thanh toán.</li>
                    <li>• Đối với thanh toán chuyển khoản, vui lòng gửi vào tài khoản: <strong>111111</strong>. Chủ tài khoản: XXXXXX. Ngân hàng YYYYYY.</li>
                    <li>• Nội dung chuyển khoản: <em>Họ tên, số điện thoại, Thanh toán mua hàng PhoneStore.</em></li>
                </ul>
            </div>
        </div>

        <!-- Nút đặt hàng -->
        <div class="form-group row">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Đặt hàng ngay" class="btn btn-primary btn-modern" />
            </div>
        </div>
    </div>
}

<style>
    /* Modern form styling */
    .payment-form {
        max-width: 800px;
        margin: 0 auto;
        padding: 30px;
        background: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }

        .payment-form:hover {
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            transform: translateY(-5px);
        }

    .form-container {
        background: #f9f9f9;
        border-radius: 15px;
        padding: 20px;
        animation: fadeIn 0.8s ease-out;
    }

    .payment-form .form-group {
        margin-bottom: 20px;
    }

    .payment-form label {
        font-weight: bold;
    }

    .payment-methods {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
    }

    .payment-option {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 16px;
        transition: all 0.3s ease;
    }

        .payment-option:hover {
            color: #000;
            transform: scale(1.05);
        }

    .form-check-input {
        width: 20px;
        height: 20px;
        transition: transform 0.3s ease;
    }

        .form-check-input:checked {
            transform: scale(1.3);
        }

    .btn-modern {
        background-color: #e74c3c;
        border-color: #e74c3c;
        color: #fff;
        padding: 12px 24px;
        font-size: 18px;
        border-radius: 8px;
        transition: background-color 0.3s ease, transform 0.3s ease;
        width: 100%;
        cursor: pointer;
    }

        .btn-modern:hover {
            background-color: #c0392b;
            transform: scale(1.05);
        }

    .h5 {
        font-size: 18px;
        font-weight: 600;
    }

    .text-danger {
        color: #e74c3c;
    }

    /* Add smooth transitions for focus states */
    .form-control:focus {
        border-color: #e74c3c;
        box-shadow: 0 0 8px rgba(231, 76, 60, 0.5);
        transition: all 0.3s ease;
    }
</style>
<!-- Thêm thông báo toastr -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<script>
    var successMessage = @Html.Raw(Json.Encode(TempData["SuccessMessage"] ?? ""));
    var errorMessage = @Html.Raw(Json.Encode(TempData["ErrorMessage"] ?? ""));

    if (successMessage) {
        toastr.success(successMessage, 'Thông báo', {
            closeButton: true,
            progressBar: true,
            timeOut: 7000,
            positionClass: 'toast-top-center'
        });
    }

    if (errorMessage) {
        toastr.error(errorMessage, 'Thông báo', {
            closeButton: true,
            progressBar: true,
            timeOut: 5000,
            positionClass: 'toast-top-center'
        });
    }
</script>
